# -*- coding: utf-8 -*-
"""Untitled47.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DHnjsvbVmUNnN2lXcNXdSn70uXpB8CBQ
"""

# Commented out IPython magic to ensure Python compatibility.
# from google.colab import drive
# drive.mount('/gdrive/')
# # %cd /gdrive

# ls

# cd/gdrive/MyDrive/ml/

# ls

import pandas as pd

df = pd.read_csv('a.csv')

df.head()

df.drop('famhist', axis=1, inplace=True)

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression

seed = 52
y = df.pop('chd')
X_train, X_test, y_train, y_test = train_test_split(df, y, test_size=0.2, random_state=seed)

model = LogisticRegression(solver='liblinear', random_state=0).fit(X_train, y_train)

train_score = model.score(X_train, y_train) * 100
test_score = model.score(X_test, y_test) * 100

# Write scores to a file
with open("metrics.txt", 'w') as outfile:
  outfile.write("Training variance explained: %2.1f%%n" % train_score)
  outfile.write("Test variance explained: %2.1f%%n" % test_score)

import matplotlib.pyplot as plt
from sklearn.metrics import confusion_matrix
from sklearn import metrics

# Confusion Matrix
cm = confusion_matrix(y_test, model.predict(X_test))
fig, ax = plt.subplots(figsize=(8, 8))
ax.imshow(cm)
ax.grid(False)
ax.xaxis.set(ticks=(0, 1), ticklabels=('Predicted 0s', 'Predicted 1s'))
ax.yaxis.set(ticks=(0, 1), ticklabels=('Actual 0s', 'Actual 1s'))
ax.set_ylim(1.5, -0.5)
for i in range(2):
    for j in range(2):
        ax.text(j, i, cm[i, j], ha='center', va='center', color='red')
plt.tight_layout()
plt.savefig("cm.png",dpi=120) 
plt.close()

#  ROC curve
model_ROC = plot_roc_curve(model, X_test, y_test)
plt.tight_layout()
plt.savefig("roc.png",dpi=120)
plt.close()

from sklearn.metrics import classification_report, confusion_matrix, roc_auc_score, plot_roc_curve

print(classification_report(y_test, model.predict(X_test)))
